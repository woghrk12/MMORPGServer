syntax = "proto3";
package tutorial;

option csharp_namespace = "Google.Protobuf.Protocol";

enum EMessageID
{
    STAT_DATA_BROADCAST = 0;
    PLAYER_ENTERED_ROOM_RESPONSE = 1;
    PLAYER_ENTERED_ROOM_BROADCAST = 2;
    PLAYER_LEFT_ROOM_RESPONSE = 3;
    PLAYER_LEFT_ROOM_BROADCAST = 4;
    OBJECT_SPAWNED_BROADCAST = 5;
    OBJECT_DESPAWNED_BROADCAST = 6;
    PERFORM_MOVE_REQUEST = 7;
    PERFORM_MOVE_BROADCAST = 8;
    PERFORM_ATTACK_REQUEST = 9;
    PERFORM_ATTACK_BROADCAST = 10;
    ATTACK_COMPLETE_BROADCAST = 11;
    HIT_BROADCAST = 12;
    OBJECT_DEAD_BROADCAST = 13;
    OBJECT_REVIVE_REQUEST = 14;
    OBJECT_REVIVE_BROADCAST = 15;
}

enum EStatType
{
    OBJECT_DATA = 0;
    ATTACK_DATA = 1;
    PROJECTILE_DATA = 2;
}

message StatDataBroadcast
{
    EStatType dataType = 1;
    string data = 2;
}

enum EGameObjectType
{
    PLAYER = 0;
    MONSTER = 1;
    PROJECTILE = 2;
}

enum EObjectState
{
    IDLE = 0;
    MOVE = 1;
    ATTACK = 2;
    DEAD = 3;
}

enum EMoveDirection
{
    NONE = 0;
    UP = 1;
    DOWN = 2;
    LEFT = 4;
    RIGHT = 8;
}

message ObjectInfo
{
    int32 objectID = 1;
    string name = 2;
    EObjectState curState = 3;
    int32 posX = 4;
    int32 posY = 5;
    EMoveDirection moveDirection = 6;
    EMoveDirection facingDirection = 7;
    int32 moveSpeed = 8;
    bool isCollidable = 9;
    ObjectStat objectStat = 10;
}

message PlayerEnteredRoomResponse
{
    ObjectInfo newPlayer = 1;
    repeated ObjectInfo otherPlayers = 2;
}

message PlayerEnteredRoomBroadcast
{
    ObjectInfo newPlayer = 1;
}

message PlayerLeftRoomResponse
{

}

message PlayerLeftRoomBroadcast
{
    int32 otherPlayerID = 1;
}

message ObjectSpawnedBroadcast
{
    ObjectInfo newObjectInfo = 1;
}

message ObjectDespawnedBroadcast
{
    int32 oldObjectID = 1;
}

message PerformMoveRequest
{
    EMoveDirection moveDirection = 1;
    int32 curPosX = 2;
    int32 curPosY = 3;
    int32 targetPosX = 4;
    int32 targetPosY = 5;
}

message PerformMoveBroadcast
{
    int32 objectID = 1;
    EMoveDirection moveDirection = 2;
    int32 curPosX = 3;
    int32 curPosY = 4;
    int32 targetPosX = 5;
    int32 targetPosY = 6;
}

enum EAttackType
{
    MELEE = 0;
    RANGE = 1;
}

message PerformAttackRequest
{
    int32 attackID = 1;
}

message PerformAttackBroadcast
{
    int32 objectID = 1;
    int32 attackID = 2;
}

message AttackCompleteBroadcast
{
    int32 objectID = 1;
}

message ObjectStat
{
    int32 maxHP = 1;
    int32 curHP = 2;
    int32 attackPower = 3;
}

message HitBroadcast
{
    int32 objectID = 1;
    int32 curHp = 2;
    int32 damage = 3;
}

message ObjectDeadBroadcast
{
    int32 objectID = 1;
    int32 attackerID = 2;
}

message ObjectReviveRequest
{
    int32 objectID = 1;
}

message ObjectReviveBroadcast
{
    int32 objectID = 1;
    int32 revivePosX = 2;
    int32 revivePosY = 3;
}